name: build

on:
  push:
    branches: [ "*" ]

jobs:

  # build-m2000-win64:
  #   runs-on: windows-latest
  #   env:
  #     C_INCLUDE_PATH: ${{ github.workspace }}/allegro/include
  #     LIBRARY_PATH: ${{ github.workspace }}/allegro/lib
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Install dependencies
  #     run: |
  #       Invoke-WebRequest -Uri https://github.com/liballeg/allegro5/releases/download/5.2.8.0/allegro-x86_64-w64-mingw32-gcc-12.1.0-posix-seh-static-5.2.8.0.zip -OutFile allegro.zip
  #       Expand-Archive allegro.zip -DestinationPath .
  #   - name: Build
  #     run: |
  #       cd src
  #       make LFLAGS="-s -mwindows"
  #   - name: Copy libs to root
  #     run: cp allegro/bin/allegro*5.2.dll .
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with: 
  #       name: test
  #       path: |
  #         M2000.exe
  #         Default.fnt
  #         P2000ROM.bin
  #         BASIC.bin
  #         allegro-5.2.dll
  #         allegro_primitives-5.2.dll
  #         allegro_image-5.2.dll
  #         allegro_audio-5.2.dll
  #         allegro_dialog-5.2.dll
  #         allegro_memfile-5.2.dll

  build-m2000-win32:
    runs-on: ubuntu-latest
    steps:
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y mingw-w64 build-essential zip curl tar
    - uses: actions/checkout@v3
    - name: Build
      run: |
        cd src
        make CC=i686-w64-mingw32-gcc LD=i686-w64-mingw32-gcc CFLAGS="-Wall -O2 -DALLEGRO -m32" LFLAGS="-s -mwindows -m32"
    - name: Generate artifact name
      id: generate-name
      run: echo "artifact_name=M2000-snapshot-$(date +'%Y%m%d%H%M%S')-win32" >> $GITHUB_OUTPUT
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.generate-name.outputs.artifact_name }}
        path: |
          build/M2000.exe
          build/allegro*.dll
          build/Default.fnt
          build/P2000ROM.bin
          build/BASIC.bin

  # build-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install dependencies
  #     run: sudo apt-get update && sudo apt-get install -y build-essential liballegro5-dev
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: |
  #       cd src
  #       make
  #   - name: Copy files
  #     run: |
  #       mkdir -p package/M2000_amd64/usr/bin/
  #       mkdir -p package/M2000_amd64/usr/share/M2000/
  #       cp M2000 package/M2000_amd64/usr/bin/
  #       cp Default.fnt package/M2000_amd64/usr/share/M2000/
  #       cp P2000ROM.bin package/M2000_amd64/usr/share/M2000/
  #       cp BASIC.bin package/M2000_amd64/usr/share/M2000/
  #   - name: Create package
  #     run: |
  #       cd package
  #       dpkg-deb --build M2000_amd64
  #   - name: Generate artifact name
  #     id: generate-name
  #     run: echo "artifact_name=M2000-snapshot-$(date +'%Y%m%d%H%M%S')-ubuntu" >> $GITHUB_OUTPUT
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: ${{ steps.generate-name.outputs.artifact_name }}
  #       path: package/M2000_amd64.deb

  # build-macos:
  #   runs-on: macos-11
  #   env:
  #     MACOSX_DEPLOYMENT_TARGET: 10.11
  #   steps:
  #   - name: Install dependencies
  #     run: brew install allegro
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: | 
  #       cd src
  #       make
  #   - name: Copy files
  #     run: |
  #       cp M2000 package/M2000.app/Contents/MacOS/
  #       cp Default.fnt package/M2000.app/Contents/Resources/
  #       cp P2000ROM.bin package/M2000.app/Contents/Resources/
  #       cp BASIC.bin package/M2000.app/Contents/Resources/
  #   - name: Zip package
  #     run: |
  #       cd package
  #       zip -vr M2000.zip M2000.app
  #   - name: Generate artifact name
  #     id: generate-name
  #     run: echo "artifact_name=M2000-snapshot-$(date +'%Y%m%d%H%M%S')-macos" >> $GITHUB_OUTPUT
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: ${{ steps.generate-name.outputs.artifact_name }}
  #       path: package/M2000.zip
