name: build

on:
  push:
    branches: [ "*" ]

jobs:

  build-win64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        Invoke-WebRequest -Uri https://github.com/liballeg/allegro5/releases/download/5.2.8.0/allegro-x86_64-w64-mingw32-gcc-12.1.0-posix-seh-static-5.2.8.0.zip -OutFile allegro.zip
        Expand-Archive allegro.zip -DestinationPath .
        Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
        choco install -y "go-msi"
        refreshenv
        echo $env:PATH
        Add-Content $env:GITHUB_PATH "$env:PATH"
    - name: Build
      run: |
        cd src
        make CFLAGS="-Wall -O2 -DALLEGRO -I${{ github.workspace }}/allegro/include" LFLAGS="-s -mwindows -L${{ github.workspace }}/allegro/lib"
    - name: Copy allegro libs to root
      run: cp allegro/bin/allegro*5.2.dll .
    - name: Create installer
      shell: cmd
      run: |
        set PATH=%PATH%;%WIX%bin
        rem echo %PATH%
        rem cp package/wix.json . 
        go-msi.exe set-guid --path package/wix.json
        mkdir ${{ github.workspace }}/tmp
        go-msi.exe make --path package/wix.json --out ${{ github.workspace }}/tmp --msi M2000.msi --arch amd64 --version 0.7
    - name: Upload package
      uses: actions/upload-artifact@v3
      with: 
        name: M2000-snapshot-win64
        path: M2000.msi

    #ProgramFiles
          # M2000.exe
          # Default.fnt
          # P2000ROM.bin
          # BASIC.bin
          # allegro-5.2.dll
          # allegro_primitives-5.2.dll
          # allegro_image-5.2.dll
          # allegro_audio-5.2.dll
          # allegro_dialog-5.2.dll
          # allegro_memfile-5.2.dll

  # build-win32:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Install dependencies
  #     run: |
  #       sudo apt install -y mingw-w64
  #       wget https://github.com/liballeg/allegro5/releases/download/5.2.8.0/allegro-i686-w64-mingw32-gcc-12.1.0-posix-dwarf-static-5.2.8.0.zip
  #       unzip allegro-i686-w64-mingw32-gcc-12.1.0-posix-dwarf-static-5.2.8.0.zip
  #   - name: Build
  #     run: |
  #       cd src
  #       make CC=i686-w64-mingw32-gcc \
  #         CFLAGS="-Wall -O2 -DALLEGRO -m32 -I${{ github.workspace }}/allegro/include" \
  #         LFLAGS="-s -mwindows -m32 -L${{ github.workspace }}/allegro/lib"
  #   - name: Copy allegro libs to root
  #     run: cp allegro/bin/allegro*5.2.dll .
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: M2000-snapshot-win32
  #       path: |
  #         M2000.exe
  #         Default.fnt
  #         P2000ROM.bin
  #         BASIC.bin
  #         allegro-5.2.dll
  #         allegro_primitives-5.2.dll
  #         allegro_image-5.2.dll
  #         allegro_audio-5.2.dll
  #         allegro_dialog-5.2.dll
  #         allegro_memfile-5.2.dll

  # build-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install dependencies
  #     run: sudo apt-get update && sudo apt-get install -y build-essential liballegro5-dev
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: |
  #       cd src
  #       make
  #   - name: Copy files
  #     run: |
  #       mkdir -p package/M2000_amd64/usr/bin/
  #       mkdir -p package/M2000_amd64/usr/share/M2000/
  #       cp M2000 package/M2000_amd64/usr/bin/
  #       cp Default.fnt package/M2000_amd64/usr/share/M2000/
  #       cp P2000ROM.bin package/M2000_amd64/usr/share/M2000/
  #       cp BASIC.bin package/M2000_amd64/usr/share/M2000/
  #   - name: Create package
  #     run: |
  #       cd package
  #       dpkg-deb --build M2000_amd64
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: M2000-snapshot-ubuntu
  #       path: package/M2000_amd64.deb

  # build-macos:
  #   runs-on: macos-11
  #   env:
  #     MACOSX_DEPLOYMENT_TARGET: 10.11
  #   steps:
  #   - name: Install dependencies
  #     run: brew install allegro
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: | 
  #       cd src
  #       make
  #   - name: Copy files
  #     run: |
  #       cp M2000 package/M2000.app/Contents/MacOS/
  #       cp Default.fnt package/M2000.app/Contents/Resources/
  #       cp P2000ROM.bin package/M2000.app/Contents/Resources/
  #       cp BASIC.bin package/M2000.app/Contents/Resources/
  #   - name: Zip package
  #     run: |
  #       cd package
  #       zip -vr M2000.zip M2000.app
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: M2000-snapshot-macos
  #       path: package/M2000.zip
