name: build

on:
  push:
    branches: [ "**" ]

jobs:

  build-win64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: base-devel mingw-w64-x86_64-gcc mingw-w64-x86_64-allegro
    - name: Build
      run: make \
        LDFLAGS="-s -mwindows"
    - name: Create installer
      shell: cmd
      run: |
        cd package/WiX
        build64.bat
    - name: Upload package
      uses: actions/upload-artifact@v3
      with: 
        name: M2000-snapshot-win64
        path: package/WiX/M2000-installer.msi

  # build-win32:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Install dependencies
  #     uses: msys2/setup-msys2@v2
  #     with:
  #       msystem: MINGW32
  #       update: true
  #       install: base-devel mingw-w64-i686-gcc mingw-w64-i686-allegro
  #   - name: Build
  #     run: make \
  #       CFLAGS="-Wall -O2 -DALLEGRO -m32"
  #       LDFLAGS="-s -mwindows -m32"
  #   - name: Create installer
  #     shell: cmd
  #     run: |
  #       cd package/WiX
  #       build32.bat
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with: 
  #       name: M2000-snapshot-win32
  #       path: package/WiX/M2000-installer.msi

  # build-win32:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Install dependencies
  #     run: |
  #       choco install winlibs --x86 
  #       Invoke-WebRequest -Uri https://github.com/liballeg/allegro5/releases/download/5.2.8.0/allegro-i686-w64-mingw32-gcc-12.1.0-posix-dwarf-static-5.2.8.0.zip -OutFile allegro.zip
  #       Expand-Archive allegro.zip -DestinationPath .
  #   - name: Build
  #     shell: bash
  #     run: make \
  #         CC=C:/ProgramData/chocolatey/lib/winlibs/tools/mingw32/bin/gcc \
  #         CFLAGS="-Wall -O2 -DALLEGRO -m32 -I${{ github.workspace }}/allegro/include" \
  #         LDFLAGS="-s -mwindows -m32 -L${{ github.workspace }}/allegro/lib"
  #   - name: Create installer
  #     shell: cmd
  #     run: |
  #       cd package/WiX
  #       build32.bat
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with: 
  #       name: M2000-snapshot-win32
  #       path: package/WiX/M2000-installer.msi

  # build-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Install dependencies
  #     run: sudo apt-get update && sudo apt-get install -y build-essential liballegro5-dev
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: make
  #   - name: Copy files
  #     run: |
  #       mkdir -p package/M2000_amd64/usr/bin/
  #       mkdir -p package/M2000_amd64/usr/share/M2000/
  #       cp M2000 package/M2000_amd64/usr/bin/
  #       cp Default.fnt package/M2000_amd64/usr/share/M2000/
  #       cp P2000ROM.bin package/M2000_amd64/usr/share/M2000/
  #       cp BASIC.bin package/M2000_amd64/usr/share/M2000/
  #       cp README.md package/M2000_amd64/usr/share/M2000/
  #       cp "package/Cassettes/Basic Demo Cassette (zijde A).cas" package/M2000_amd64/usr/share/M2000/
  #       cp "package/Cassettes/Basic Demo Cassette (zijde B).cas" package/M2000_amd64/usr/share/M2000/
  #       cp "package/Cartridges/Basic 1.1 NL.bin" package/M2000_amd64/usr/share/M2000/
  #       cp "package/Cartridges/Familiegeheugen 2.0 NL.bin" package/M2000_amd64/usr/share/M2000/
  #   - name: Create package
  #     run: |
  #       cd package
  #       dpkg-deb --build M2000_amd64
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: M2000-snapshot-ubuntu
  #       path: package/M2000_amd64.deb

  # build-macos:
  #   runs-on: macos-11
  #   env:
  #     MACOSX_DEPLOYMENT_TARGET: 10.13
  #   steps:
  #   - name: Install dependencies
  #     run: |
  #       brew install allegro
  #       brew install dylibbundler
  #   - uses: actions/checkout@v3
  #   - name: Build
  #     run: make
  #   - name: Copy files
  #     run: |
  #       cp M2000 package/M2000.app/Contents/MacOS/
  #       cp Default.fnt package/M2000.app/Contents/Resources/
  #       cp P2000ROM.bin package/M2000.app/Contents/Resources/
  #       cp BASIC.bin package/M2000.app/Contents/Resources/
  #       cp README.md package/M2000.app/Contents/Resources/
  #       cp "package/Cassettes/Basic Demo Cassette (zijde A).cas" package/M2000.app/Contents/Resources/
  #       cp "package/Cassettes/Basic Demo Cassette (zijde B).cas" package/M2000.app/Contents/Resources/
  #       cp "package/Cartridges/Basic 1.1 NL.bin" package/M2000.app/Contents/Resources/
  #       cp "package/Cartridges/Familiegeheugen 2.0 NL.bin" package/M2000.app/Contents/Resources/
  #   - name: Run dylibbundler
  #     run: |
  #       export DYLD_LIBRARY_PATH=/usr/local/opt/allegro/lib
  #       dylibbundler -x package/M2000.app/Contents/MacOS/M2000 -b -cd -p @executable_path
  #   - name: Zip package
  #     run: |
  #       cd package
  #       zip -vr M2000.zip M2000.app
  #   - name: Upload package
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: M2000-snapshot-macos
  #       path: package/M2000.zip
